#
# set-cpu-state related
#
- Add support for AMD Boost
    
- Per CPU model settings?
    - different best performance settings based on detected CPU class?
    - fall back to defaults otherwise?
    - separate lookup table, or embed in library? -> library.  users can
      edit conf file if prefer different settings

- Gracefully handle the situation where any of the capabilities are not
  available based on HW or SW configuration

- "consider adding a "triggers" capability to set-cpu-state, so that
  after making changes, any "trigger scripts" get executed for
  post-processing.

    - Some programs may need to be restarted to see the new core count after
      changing the active cores or hyperthreading settings.
        - Example:
            - run set-cpu-state and it turns off hyperthreading
            - a set-cpu-state "trigger script" restarts torque so that the MOM
              reports the right number of cores for scheduling.


- "best practice configurations" via SSM and/or Puppet to include:
    - numad (maybe)
        - https://goo.gl/Kd1hB5
        - https://goo.gl/y7qwIp


#
# New tool, proposed by Mark at TAMU:
#
- ethernet.label_switch_ports

    Take xCAT node to port mappings, and set node name as label for
    each port in each Ethernet switch.

    - Helps in tracking down issues when monitoring for problems in
      switch fabric.


#
# New tool:  flops-calculator
#
    - /etc/hpc-goodies/flops-calculator.conf.d/
    - /etc/hpc-goodies/flops-calculator.conf.d/Intel-E5-2698a.conf
    - /etc/hpc-goodies/flops-calculator.conf.d/ARM-1234.conf
    - /etc/hpc-goodies/flops-calculator.conf.d/NVidia-k80.conf


# 
# backup_xcatdb 
# 

  Consider adding a "--git /path/to/local/repo" option
  that will do a nightly xCAT DB dump into the repository, rather than a
  date stamped directory, and commit all changes.

  This would allow for a very simple way to view changes made to the
  xCAT DB from day to day via "git diff" or through the web interface of
  an upstream repo tool, such as gitlab.


# 
# handle firmware location for set_hca_firmware_update
# 
    - default to stated firmware location?  
        /usr/share/hpc_goodies/firmware/hcas for HCAs
        /usr/share/hpc_goodies/firmware/uefi for node firmware?
        (used by set_uefi_firmware_update)


